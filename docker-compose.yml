version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

  # Backend Services
  order-service:
    build:
      context: ./services/order-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKER=kafka:9092

  inventory-service:
    build:
      context: ./services/inventory-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKER=kafka:9092

  # New Services
  product-service:
    build:
      context: ./services/product-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKER=kafka:9092

  management-service:
    build:
      context: ./services/management-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKER=kafka:9092

  # Existing Services with Updated Ports
  payment-service:
    build:
      context: ./services/payment-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKER=kafka:9092

  notification-service:
    build:
      context: ./services/notification-service
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKER=kafka:9092

  shipping-service:
    build:
      context: ./services/shipping-service
      dockerfile: Dockerfile
    ports:
      - "8086:8086"
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKER=kafka:9092

  status-service:
    build:
      context: ./services/status-service
      dockerfile: Dockerfile
    ports:
      - "8087:8087"
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKER=kafka:9092

  # Separated Frontend Services
  customer-frontend:
    build:
      context: ./frontend/customer
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - order-service
      - product-service
      - status-service
    environment:
      - NODE_ENV=production

  admin-frontend:
    build:
      context: ./frontend/admin
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    depends_on:
      - inventory-service
      - product-service
      - management-service
      - status-service
    environment:
      - NODE_ENV=production