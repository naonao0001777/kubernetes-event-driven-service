apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-frontend
  labels:
    app: admin-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: admin-frontend
  template:
    metadata:
      labels:
        app: admin-frontend
    spec:
      containers:
      - name: admin-frontend
        image: your-registry/admin-frontend:latest
        ports:
        - containerPort: 3001
        env:
        - name: NEXT_PUBLIC_API_BASE_URL
          value: "http://status-service:8085"
        - name: NEXT_PUBLIC_WS_URL
          value: "ws://status-service:8085"
        - name: NODE_ENV
          value: "production"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: admin-frontend
  labels:
    app: admin-frontend
spec:
  selector:
    app: admin-frontend
  ports:
  - name: http
    port: 80
    targetPort: 3001
    protocol: TCP
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: admin-frontend
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: admin-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
spec:
  tls:
  - hosts:
    - admin.your-domain.com
    secretName: admin-frontend-tls
  rules:
  - host: admin.your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: admin-frontend
            port:
              number: 80
